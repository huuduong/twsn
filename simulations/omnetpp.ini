[General]


#################################################
[Config Test]
network=twsn.networks.TestWSN

TestWSN.node[*].energyType = "Battery"
TestWSN.node[*].netType = "NetEMRP"

TestWSN.node[*].linkType = "LinkBMAC"
TestWSN.bs.linkType = "LinkBMAC"

TestWSN.node[*].link.enableDutyCycling = true
TestWSN.node[*].link.checkInterval = 0.02 s
TestWSN.node[*].link.preambleLen = 635 byte
TestWSN.node[*].link.listenTimeout = 1 s

TestWSN.bs.link.enableDutyCycling = false
TestWSN.bs.link.checkInterval = 0.02 s # Must matched with nodes
TestWSN.bs.link.preambleLen = 635 byte # Must matched with nodes
TestWSN.bs.link.listenTimeout = 1 s


#################################################
[Config Config1]
network=twsn.networks.TrackingWSN

TrackingWSN.rows = 16
TrackingWSN.cols = 16
TrackingWSN.numNodes = 256
TrackingWSN.numTargets = 1

# Targets (refer to .ned file for description)
# ===============================================
TrackingWSN.targetType = "AcousticTarget"

TrackingWSN.target[0].mobility.moving = true
TrackingWSN.target[0].mobility.startMovingTime = 10 s
TrackingWSN.target[0].mobility.stopSimWhenFinishMoving = true
TrackingWSN.target[0].mobility.pathFile = "../simulations/path1.txt"
TrackingWSN.target[0].generator.ssRange = 35 m

TrackingWSN.target[1].mobility.moving = true
TrackingWSN.target[1].mobility.startMovingTime = 10 s
TrackingWSN.target[1].mobility.stopSimWhenFinishMoving = true
TrackingWSN.target[1].mobility.pathFile = "../simulations/path4.txt"
TrackingWSN.target[1].generator.ssRange = 35 m

# Sensor nodes (refer to .ned file for description)
# ===============================================
TrackingWSN.nodeType = "TrackingNode"
TrackingWSN.node[*].phyType = "PhyCC2420"
TrackingWSN.node[*].linkType = "LinkUnslottedCSMACA" # Must be matched with BS
TrackingWSN.node[*].netType = "NetEMRP" # Must be matched with BS

TrackingWSN.node[*].energy.initCapacity = 5 mWh
TrackingWSN.node[*].energy.residualEnergy.result-recording-modes = -last

TrackingWSN.node[*].phy.bitRate = 250000 bps
TrackingWSN.node[*].phy.txRange = 40 m

#TrackingWSN.node[*].link.aTurnaroundTime = # Please update if switching delay in physical layer changes
TrackingWSN.node[*].link.aMaxBE = 5
TrackingWSN.node[*].link.macMaxNB = 4 # 0 ~ 5, default 4
TrackingWSN.node[*].link.macMinBE = 3 # 0 ~ 3, default 3

TrackingWSN.node[*].net.initInterval = 10 s
TrackingWSN.node[*].net.waitRelayInfoTimeout = 0.2 s # Must be matched with BS
TrackingWSN.node[*].net.waitEnergyInfoTimeout = 0.2 s # Must be matched with BS
TrackingWSN.node[*].net.switchingEnergy = 0.5 mWh # Should be configured about 10% of initCapacity if initCapacity is small

TrackingWSN.node[*].sensor.sigmaRate = 0.15 # Affect standard deviation of error (0 ~ 1). Use 0 for exact measurements.

TrackingWSN.node[*].app.sensePeriod = 0.5 s
TrackingWSN.node[*].app.collMeaInterval = 0.1 s
TrackingWSN.node[*].app.repMeaInterval = 0.095 s # NOTE: MUST LESS THAN collMeaInterval
TrackingWSN.node[*].app.minNumMeasurement = 3
TrackingWSN.node[*].app.chBeaconTime = 0.45 s # Relative to sense period

# Base Station (refer to .ned file for description)
# ===============================================
TrackingWSN.bsType = "TrackingBaseStation"
TrackingWSN.bs.phyType = "PhyCC2420"
TrackingWSN.bs.linkType = "LinkUnslottedCSMACA" # Must be matched with nodes
TrackingWSN.bs.netType = "NetEMRP" # Must be matched with nodes

TrackingWSN.bs.energy.residualEnergy.result-recording-modes = -last

#TrackingWSN.node[*].link.aTurnaroundTime = # Please update if switching delay in physical layer changes
TrackingWSN.bs.link.aMaxBE = 5
TrackingWSN.bs.link.macMaxNB = 4 # 0 ~ 5, default 4
TrackingWSN.bs.link.macMinBE = 3 # 0 ~ 3, default 3

TrackingWSN.bs.net.waitRelayInfoTimeout = 0.2 s # Must be matched with nodes
TrackingWSN.bs.net.waitEnergyInfoTimeout = 0.2 s # Must be matched with nodes

TrackingWSN.bs.app.theta = 0.7 				# 0 ~ 1. With 0 fading speed is fastest
TrackingWSN.bs.app.distanceThreshold = 30 m # Corresponding to sensor.sigmaRate and ssRange
TrackingWSN.bs.app.timeThreshold = 2 s
TrackingWSN.bs.app.minDeltaT = 0.2 s
TrackingWSN.bs.app.minJunkTraceOld = 2 s
TrackingWSN.bs.app.maxJunkTraceLen = 3

# Helpers
# ===============================================
# Show/hide decorations
TrackingWSN.decoHelper.enable = true
# Period for polling total residual energy
TrackingWSN.statHelper.pollTREPeriod = 5 s


#################################################
[Config Config2]
extends = Config1

TrackingWSN.node[*].linkType = "LinkXTMAC"
TrackingWSN.bs.linkType = "LinkXTMAC"

# Refer to .ned file for description and calculation for parameters
TrackingWSN.node[*].link.enableDutyCycling = true
#TrackingWSN.node[*].link.strobeTime = # Please update if change bitRate and CSMA parameters
TrackingWSN.node[*].link.sleepInterval = 0.1 s # Greater sleep interval save more rx energy but causes more delay and more rx energy
TrackingWSN.node[*].link.activeTime = 0.8 s # Active timeout. Please config appropriately with work load.

TrackingWSN.bs.link.enableDutyCycling = false


#################################################
[Config Config21]
extends = Config2
TrackingWSN.node[*].link.sleepInterval = 0.15 s


#################################################
[Config Config22]
extends = Config2
TrackingWSN.node[*].link.sleepInterval = 0.2 s


#################################################
[Config Config3]
extends = Config1

TrackingWSN.node[*].linkType = "LinkBMAC"
TrackingWSN.bs.linkType = "LinkBMAC"

TrackingWSN.node[*].link.enableDutyCycling = true
# Check interval
TrackingWSN.node[*].link.checkInterval = 0.01 s
# Preamble length, should equal 'byteRoundup(bitRate * (checkInterval + turnAroundTime + ccaDur)'
# checkInterval ~ preambleLen
# 0.01s ~ 323 byte
# 0.02s ~ 635 byte
# 0.05s ~ 1573 byte
# 0.1s ~ 3135 byte
# 0.2s ~ 6260 byte
TrackingWSN.node[*].link.preambleLen = 323 byte
# Timeout to stay active without any activities, must be greater worst sending time of a
# packet (including LIFS and around 0.032672)
# In general, longer listenTimeout may be more reliable, but consumpts more energy
TrackingWSN.node[*].link.listenTimeout = 0.08 s

TrackingWSN.bs.link.enableDutyCycling = false
TrackingWSN.bs.link.checkInterval = 0.01 s # Must matched with nodes
TrackingWSN.bs.link.preambleLen = 323 byte # Must matched with nodes



#################################################
[Config Config4]
extends = Config1

TrackingWSN.node[*].netType = "NetARPEES"
TrackingWSN.bs.netType = "NetARPEES"

TrackingWSN.node[*].net.waitRelayInfoTimeout = 0.075 s # Must be matched with BS
TrackingWSN.bs.net.waitRelayInfoTimeout = 0.075 s # Must be matched with nodes


#################################################
[Config Config5]
extends = Config2

TrackingWSN.node[*].link.sleepInterval = 0.03 s # Greater sleep interval save more rx energy but causes more delay and more rx energy
TrackingWSN.node[*].link.activeTime = 1.5 s # Active timeout. Please config appropriately with work load.

TrackingWSN.node[*].netType = "NetARPEES"
TrackingWSN.bs.netType = "NetARPEES"

TrackingWSN.node[*].net.waitRelayInfoTimeout = 0.2 s # Must be matched with BS
TrackingWSN.bs.net.waitRelayInfoTimeout = 0.2 s # Must be matched with nodes


#################################################
[Config Config6]
extends = Config1

TrackingWSN.node[*].linkType = "LinkXMAC"
TrackingWSN.bs.linkType = "LinkXMAC"

# Refer to .ned file for description and calculation for parameters
TrackingWSN.node[*].link.enableDutyCycling = true
#TrackingWSN.node[*].link.strobeTime = # Please update if change bitRate and CSMA parameters
# Greater sleep interval save more rx energy but causes more delay and more rx energy
TrackingWSN.node[*].link.sleepInterval = 0.1 s

TrackingWSN.bs.link.enableDutyCycling = false