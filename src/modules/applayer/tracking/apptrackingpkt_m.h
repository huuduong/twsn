//
// Generated file, do not edit! Created by opp_msgc 4.4 from modules/applayer/tracking/apptrackingpkt.msg.
//

#ifndef _TWSN_APPTRACKINGPKT_M_H_
#define _TWSN_APPTRACKINGPKT_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0404
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif

// cplusplus {{
#include "apppkt_m.h"
	#include "measurement.h"
	#include "targetpos.h"
// }}


namespace twsn {

/**
 * Enum generated from <tt>modules/applayer/tracking/apptrackingpkt.msg</tt> by opp_msgc.
 * <pre>
 * enum AppTrackingPktType {
 *     AT_SYNC_REQUEST = 0; 
 *     AT_MEASUREMENT = 1; 
 *     AT_TARGET_POSITION = 2; 
 *     AT_CH_BEACON = 3; 
 * };
 * </pre>
 */
enum AppTrackingPktType {
    AT_SYNC_REQUEST = 0,
    AT_MEASUREMENT = 1,
    AT_TARGET_POSITION = 2,
    AT_CH_BEACON = 3
};

/**
 * Class generated from <tt>modules/applayer/tracking/apptrackingpkt.msg</tt> by opp_msgc.
 * <pre>
 * packet AppTrackingPkt extends AppPkt {
 *     pktSize = 2;
 *     int pktType;
 * }
 * </pre>
 */
class AppTrackingPkt : public ::twsn::AppPkt
{
  protected:
    int pktType_var;

  private:
    void copy(const AppTrackingPkt& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const AppTrackingPkt&);

  public:
    AppTrackingPkt(const char *name=NULL, int kind=0);
    AppTrackingPkt(const AppTrackingPkt& other);
    virtual ~AppTrackingPkt();
    AppTrackingPkt& operator=(const AppTrackingPkt& other);
    virtual AppTrackingPkt *dup() const {return new AppTrackingPkt(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getPktType() const;
    virtual void setPktType(int pktType);
};

inline void doPacking(cCommBuffer *b, AppTrackingPkt& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, AppTrackingPkt& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>modules/applayer/tracking/apptrackingpkt.msg</tt> by opp_msgc.
 * <pre>
 * packet AT_MeasurementPkt extends AppTrackingPkt {
 *     routingType = RT_BROADCAST;
 *     pktType = AT_MEASUREMENT;
 *     pktSize = 18;
 *     
 *     Measurement measurement;
 * }
 * </pre>
 */
class AT_MeasurementPkt : public ::twsn::AppTrackingPkt
{
  protected:
    twsn::Measurement measurement_var;

  private:
    void copy(const AT_MeasurementPkt& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const AT_MeasurementPkt&);

  public:
    AT_MeasurementPkt(const char *name=NULL, int kind=0);
    AT_MeasurementPkt(const AT_MeasurementPkt& other);
    virtual ~AT_MeasurementPkt();
    AT_MeasurementPkt& operator=(const AT_MeasurementPkt& other);
    virtual AT_MeasurementPkt *dup() const {return new AT_MeasurementPkt(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual twsn::Measurement& getMeasurement();
    virtual const twsn::Measurement& getMeasurement() const {return const_cast<AT_MeasurementPkt*>(this)->getMeasurement();}
    virtual void setMeasurement(const twsn::Measurement& measurement);
};

inline void doPacking(cCommBuffer *b, AT_MeasurementPkt& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, AT_MeasurementPkt& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>modules/applayer/tracking/apptrackingpkt.msg</tt> by opp_msgc.
 * <pre>
 * packet AT_TargetPosPkt extends AppTrackingPkt {
 *     routingType = RT_TO_BS;
 *     pktType = AT_TARGET_POSITION;
 *     pktSize = 19;
 *     
 *     TargetPos targetPos;
 * }
 * </pre>
 */
class AT_TargetPosPkt : public ::twsn::AppTrackingPkt
{
  protected:
    twsn::TargetPos targetPos_var;

  private:
    void copy(const AT_TargetPosPkt& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const AT_TargetPosPkt&);

  public:
    AT_TargetPosPkt(const char *name=NULL, int kind=0);
    AT_TargetPosPkt(const AT_TargetPosPkt& other);
    virtual ~AT_TargetPosPkt();
    AT_TargetPosPkt& operator=(const AT_TargetPosPkt& other);
    virtual AT_TargetPosPkt *dup() const {return new AT_TargetPosPkt(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual twsn::TargetPos& getTargetPos();
    virtual const twsn::TargetPos& getTargetPos() const {return const_cast<AT_TargetPosPkt*>(this)->getTargetPos();}
    virtual void setTargetPos(const twsn::TargetPos& targetPos);
};

inline void doPacking(cCommBuffer *b, AT_TargetPosPkt& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, AT_TargetPosPkt& obj) {obj.parsimUnpack(b);}

}; // end namespace twsn

#endif // _TWSN_APPTRACKINGPKT_M_H_
